# -*- generated by 1.0.9 -*-
import da
_config_object = {}
import os
olympus_module = da.import_da('olympus')
client_module = da.import_da('client')

class Node_(da.NodeProcess):

    def __init__(self, procimpl, props):
        super().__init__(procimpl, props)
        self._events.extend([])

    def run(self):
        config_file = 'config1.txt'
        config = {}
        with open(os.path.join(os.path.abspath(''), 'config', config_file), 'r') as input:
            for line in input:
                if (not (line[0] == '#')):
                    (key, sep, val) = line.partition('=')
                    if (not (len(sep) == 0)):
                        val = val.strip()
                        config[key.strip()] = (int(val) if str.isdecimal(val) else val)
        print(config)
        num_replicas = ((2 * config['t']) + 1)
        olympus = self.new(olympus_module.Olympus, [num_replicas], num=1)
        clients = self.new(client_module.Client, [], num=config['num_client'])
        self._start(olympus)
        self._start(clients)
