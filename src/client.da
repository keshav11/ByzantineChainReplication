import time
import sys

class Client(process):
    def setup(client_id, workload):
        output("client setup")
        self.olympus = None
        self.configuration = None
        self.head = None
        self.replicas_public_keys = {}

    def receive(msg= ('olympus', olympus, replicas_public_keys)):
        self.olympus = olympus
        self.replicas_public_keys = replicas_public_keys
        send(("olympus_received", self), to=self.olympus)

    def receive(msg= ('config', config)):
        self.configuration = config
        """ TODO config validation"""
        self.head = self.configuration[0]

    def fetch_config():
        send(('get_config', self), to=self.olympus)
        await(received(('config',self.configuration)))

    def run():
        output("waiting for olympus to contact...")
        await(received(('olympus', self.olympus)))
        output("client received olympus ", self.olympus)
        fetch_config()
        output("client received config from olympus ", self.configuration)

        workload = workload.split(';')
        for i in range(len(workload)):
            request = workload[i].strip()
            request_id = str(client_id) + '_' + str(i)
            output("sending request with id ", request_id, " and request workload ", request)
            send(('request', request_id, request, 0), to=self.head)
            time.sleep(1)
        output('client run finished!')


def main():
    pass